package batch.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.textGen.TextGenManager;

public class FunctionDeclaration_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    this.appendNewLine();
    this.append(":");
    this.append(SPropertyOperations.getString(node, "name"));
    this.appendNewLine();
    this.increaseDepth();
    this.indentBuffer();
    for (int i = 0; i < ListSequence.fromList(SLinkOperations.getTargets(node, "params", true)).count(); i++) {
      String name = SLinkOperations.getTargets(node, "params", true).get(i).getName();
      this.append("SET ");
      this.append(name);
      this.append("=%");
      this.append(String.valueOf(i + 1));
      this.appendNewLine();
    }

    TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, "body", true), this.getSNode());
    this.decreaseDepth();
    this.append("GOTO :EOF");
    this.appendNewLine();
  }
}
