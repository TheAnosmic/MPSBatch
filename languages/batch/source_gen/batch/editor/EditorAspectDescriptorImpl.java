package batch.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Command_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new CommandBlock_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ECHO_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new ECHOTO_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new ERROR_LEVEL_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new FunctionCall_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new FunctionDeclaration_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new FunctionsBlock_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new IntLiteral_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new PAUSE_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new ParamReference_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new Parameter_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new Params_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new SET_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new Script_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new String_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new StringLiteral_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new VarReference_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new Variable_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"batch.structure.Command", "batch.structure.CommandBlock", "batch.structure.ECHO", "batch.structure.ECHOTO", "batch.structure.ERROR_LEVEL", "batch.structure.FunctionCall", "batch.structure.FunctionDeclaration", "batch.structure.FunctionsBlock", "batch.structure.IntLiteral", "batch.structure.PAUSE", "batch.structure.ParamReference", "batch.structure.Parameter", "batch.structure.Params", "batch.structure.SET", "batch.structure.Script", "batch.structure.String", "batch.structure.StringLiteral", "batch.structure.VarReference", "batch.structure.Variable"};
}
